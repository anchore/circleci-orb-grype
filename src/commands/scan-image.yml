description: >
  Scan a Docker image with grype. The scan output goes in a file named `grype-vulns.output`, by default, the parameter `output-file` can change it.

parameters:
  image-name:
    type: string
    description: Image name with tag (e.g. "alpine:latest").
  registry-name:
    type: string
    default: ""
    description: Name of private registry (e.g. docker.io).
  registry-user:
    type: string
    default: ""
    description: Username for private registry (use env var to populate).
  registry-pass:
    type: string
    default: ""
    description: Password for private registry (use env var to populate).
  registry-auth-token:
    type: string
    default: ""
    description: Auth token for private registry
  fail-on-severity:
    type: string
    default: ""
    description: set the return code to 1 if a vulnerability is found with a severity >= the given severity, options=[negligible low medium high critical]
  output-format:
    type: string
    default: json
    description: "report output formatter, formats: json, table, cyclonedx, template"
  output-file:
    type: string
    default: grype-vulns.output
    description: file name where the list of vulnerabilities goes.
  enable-verbose-logs:
    type: boolean
    default: true # NOTE: grype gets stuck scanning an image without debug log flag
    description: enable verbose logs
  grype-version:
    type: string
    default: v0.26.1
    description: version of grype used by this orb.

steps:
  - run:
      name: Analyze image with grype.
      environment:
        IMAGE_NAME: "<< parameters.image-name >>"
        GRYPE_REGISTRY_AUTH_AUTHORITY: "<< parameters.registry-name >>"
        GRYPE_REGISTRY_AUTH_USERNAME: "<< parameters.registry-user >>"
        GRYPE_REGISTRY_AUTH_PASSWORD: "<< parameters.registry-pass >>"
        GRYPE_REGISTRY_AUTH_TOKEN: "<< parameters.registry-auth-token >>"
        FAIL_ON: "<< parameters.fail-on-severity >>"
        OUTPUT_FORMAT: "<< parameters.output-format >>"
        OUTPUT_FILE: "<< parameters.output-file >>"
        ENABLE_VERBOSE_LOGS: "<< parameters.enable-verbose-logs >>"
        GRYPE_VERSION: "<< parameters.grype-version >>"
      command: ". src/scripts/scan-image.sh && ScanImage"
